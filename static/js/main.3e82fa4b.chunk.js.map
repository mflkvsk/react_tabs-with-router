{"version":3,"sources":["components/Navigation.tsx","components/HomePage.tsx","components/TabsPage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","navData","classNames","isActive","to","HomePage","TabsPage","tabs","tabId","useParams","selectedTab","find","tab","id","map","title","undefined","content","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAuB,kBAClC,wBAAQC,UAAU,SAAlB,SACE,sBAAKA,UAAU,4CAAf,UACE,cAAC,IAAD,CACEA,UAAW,SAACC,GAAD,OAAcC,IACvB,cACA,CAAE,YAAaD,EAAQE,YAEzBC,GAAG,IALL,kBAUA,cAAC,IAAD,CACEJ,UAAW,SAACC,GAAD,OAAcC,IACvB,cACA,CAAE,YAAaD,EAAQE,YAEzBC,GAAG,QALL,wBCfOC,EAAqB,kBAChC,oBAAIL,UAAU,oBAAd,wBCKWM,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAUC,cAAVD,MACFE,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,qCACE,qBAAKR,UAAU,uCAAf,SACGO,EAAKO,KAAI,SAAAF,GAAG,OACX,cAAC,IAAD,CAEER,GAAE,gBAAWQ,EAAIC,IACjBb,UAAW,SAACC,GAAD,OAAcC,IACvB,cACA,CAAE,YAAaD,EAAQE,YAL3B,SAQGS,EAAIG,OAPAH,EAAIC,cAYMG,KAAT,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAaG,IACV,mBAAGb,UAAU,oBAAb,iCACA,mBAAGA,UAAU,oBAAb,gBAAkCU,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAaO,cCVnDV,EAAc,CAClB,CAAEM,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,gBAgB3BC,EAbH,kBACV,sBAAKlB,UAAU,MAAf,UACE,oBAAIA,UAAU,oBAAd,8BACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,CAAUb,KAAMA,MACnD,cAAC,IAAD,CAAOY,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAUb,KAAMA,MAC7C,cAAC,IAAD,CAAOY,KAAK,IAAIC,QAAS,cAAC,EAAD,aChC/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3e82fa4b.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\nexport const Navigation: React.FC = () => (\n  <header className=\"navbar\">\n    <nav className=\"navbar-menu columns is-centered mt-4 mb-4\">\n      <NavLink\n        className={(navData) => (classNames(\n          'navbar-item',\n          { 'is-active': navData.isActive },\n        ))}\n        to=\"/\"\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        className={(navData) => (classNames(\n          'navbar-item',\n          { 'is-active': navData.isActive },\n        ))}\n        to=\"/tabs\"\n      >\n        Tabs\n      </NavLink>\n    </nav>\n  </header>\n);\n","import React from 'react';\nimport 'bulma/css/bulma.css';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"has-text-centered\">Home page</h1>\n);\n","import React from 'react';\nimport { useParams, NavLink } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams<{ tabId: string }>();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <nav className=\"navbar-menu columns is-centered mb-6\">\n        {tabs.map(tab => (\n          <NavLink\n            key={tab.id}\n            to={`/tabs/${tab.id}`}\n            className={(navData) => (classNames(\n              'navbar-item',\n              { 'is-active': navData.isActive },\n            ))}\n          >\n            {tab.title}\n          </NavLink>\n        ))}\n      </nav>\n\n      {selectedTab?.id === undefined\n        ? <p className=\"has-text-centered\">Please select a tab</p>\n        : <p className=\"has-text-centered\">{selectedTab?.content}</p>}\n    </>\n  );\n};\n","import './App.scss';\nimport { Routes, Route } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\n\n/*\nimport { RouteComponentProps } from 'react-router-dom';\n\ntype TabsPageProps = React.FC<RouteComponentProps<{ tabId: string }>>;\nconst TabsPage: TabsPageProps = ({ match }) => {...};\n\nor\n\nimport { useParams } from 'react-router-dom';\n\nconst TabsPage = () => {\n  const { tabId } = useParams<{ tabId: string }>();\n  ...\n};\n*/\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1 className=\"has-text-centered\">Tabs with router</h1>\n    <Navigation />\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"tabs/:tabId\" element={<TabsPage tabs={tabs} />} />\n      <Route path=\"/tabs\" element={<TabsPage tabs={tabs} />} />\n      <Route path=\"*\" element={<HomePage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}