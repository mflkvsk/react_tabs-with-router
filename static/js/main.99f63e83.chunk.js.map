{"version":3,"sources":["components/Navigation.tsx","components/HomePage.tsx","components/TabsPage.tsx","App.tsx","index.tsx"],"names":["Navigation","callback","navData","classNames","isActive","className","to","HomePage","TabsPage","tabs","tabId","useParams","selectedTab","find","tab","id","map","title","undefined","content","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAuB,WAClC,IAAMC,EAAW,SAACC,GAAD,OAAqCC,IACpD,cACA,CAAE,YAAaD,EAAQE,YAGzB,OACE,wBAAQC,UAAU,SAAlB,SACE,sBAAKA,UAAU,4CAAf,UACE,cAAC,IAAD,CACEA,UAAWJ,EACXK,GAAG,IAFL,kBAOA,cAAC,IAAD,CACED,UAAWJ,EACXK,GAAG,QAFL,wBClBKC,EAAqB,kBAChC,oBAAIF,UAAU,oBAAd,wBCKWG,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAUC,cAAVD,MACFE,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAEhD,OACE,qCACE,qBAAKL,UAAU,uCAAf,SACGI,EAAKO,KAAI,SAAAF,GAAG,OACX,cAAC,IAAD,CAEER,GAAE,gBAAWQ,EAAIC,IACjBV,UAAW,SAACH,GAAD,OAAcC,IACvB,cACA,CAAE,YAAaD,EAAQE,YAL3B,SAQGU,EAAIG,OAPAH,EAAIC,SAYf,cAAC,IAAD,IAEA,mBAAGV,UAAU,oBAAb,cAEwBa,KAAT,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAaG,IACT,sBACAH,EAAYO,cCdpBV,EAAc,CAClB,CAAEM,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,eACxC,CAAEJ,GAAI,QAASE,MAAO,QAASE,QAAS,gBAkB3BC,EAfH,kBACV,sBAAKf,UAAU,MAAf,UACE,oBAAIA,UAAU,oBAAd,8BACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,eAAC,IAAD,CAAOD,KAAK,QAAZ,UACE,cAAC,IAAD,CAAOA,KAAK,SAASC,QAAS,cAAC,EAAD,CAAUb,KAAMA,MAC9C,cAAC,IAAD,CAAOc,OAAK,EAACD,QAAS,cAAC,EAAD,CAAUb,KAAMA,SAExC,cAAC,IAAD,CAAOY,KAAK,IAAIC,QAAS,cAAC,EAAD,aClC/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.99f63e83.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\nexport const Navigation: React.FC = () => {\n  const callback = (navData: { isActive: boolean }) => (classNames(\n    'navbar-item',\n    { 'is-active': navData.isActive },\n  ));\n\n  return (\n    <header className=\"navbar\">\n      <nav className=\"navbar-menu columns is-centered mt-4 mb-4\">\n        <NavLink\n          className={callback}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={callback}\n          to=\"/tabs\"\n        >\n          Tabs\n        </NavLink>\n      </nav>\n    </header>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"has-text-centered\">Home page</h1>\n);\n","import React from 'react';\nimport { useParams, NavLink, Outlet } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\ntype Props = {\n  tabs: Tab[],\n};\n\nexport const TabsPage: React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams<{ tabId: string }>();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <nav className=\"navbar-menu columns is-centered mb-6\">\n        {tabs.map(tab => (\n          <NavLink\n            key={tab.id}\n            to={`/tabs/${tab.id}`}\n            className={(navData) => (classNames(\n              'navbar-item',\n              { 'is-active': navData.isActive },\n            ))}\n          >\n            {tab.title}\n          </NavLink>\n        ))}\n      </nav>\n\n      <Outlet />\n\n      <p className=\"has-text-centered\">\n        {\n          selectedTab?.id === undefined\n            ? 'Please select a tab'\n            : selectedTab.content\n        }\n      </p>\n    </>\n  );\n};\n","import './App.scss';\nimport { Routes, Route } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\n\n/*\nimport { RouteComponentProps } from 'react-router-dom';\n\ntype TabsPageProps = React.FC<RouteComponentProps<{ tabId: string }>>;\nconst TabsPage: TabsPageProps = ({ match }) => {...};\n\nor\n\nimport { useParams } from 'react-router-dom';\n\nconst TabsPage = () => {\n  const { tabId } = useParams<{ tabId: string }>();\n  ...\n};\n*/\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <h1 className=\"has-text-centered\">Tabs with router</h1>\n    <Navigation />\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/tabs\">\n        <Route path=\":tabId\" element={<TabsPage tabs={tabs} />} />\n        <Route index element={<TabsPage tabs={tabs} />} />\n      </Route>\n      <Route path=\"*\" element={<HomePage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}